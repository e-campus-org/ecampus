{
  "info": {
    "version": "1.0",
    "title": "E-Campus"
  },
  "host": "localhost:4000",
  "definitions": {
    "EmailAndPassport": {
      "description": "An user account of the application",
      "example": {
        "email": "test@example.com",
        "password": "qwerty123!"
      },
      "properties": {
        "email": {
          "description": "User email",
          "type": "string"
        },
        "password": {
          "description": "User password",
          "type": "string"
        }
      },
      "required": [
        "password",
        "email"
      ],
      "title": "Email and Password",
      "type": "object"
    },
    "TokenResult": {
      "description": "Object containing jwt token data",
      "example": {
        "access_token": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJFLUNhbXB1cyIsImV4cCI6MTcyMzYzNDA1OSwiaWF0IjoxNzIxMjE0ODU5LCJpc3MiOiJFLUNhbXB1cyIsImp0aSI6ImJlZTM0ODFiLTFmMTUtNDdiYi05YmIwLTQzYTk0MDhiYjgzYyIsIm5iZiI6MTcyMTIxNDg1OCwic3ViIjoiMTIiLCJ0eXAiOiJhY2Nlc3MifQ.o5kKkF_CJXsl0zrVoew38KCqqUMpPrn5qzJHcIuQQFYNZfCu0K2SerpHQTPlUqQOaHFzaWrzFFM497BtMSmb3Q"
      },
      "properties": {
        "access_token": {
          "description": "User access token",
          "type": "string"
        }
      },
      "title": "Token result",
      "type": "object"
    },
    "NewAccount": {
      "description": "Data object to create new account",
      "example": {
        "email": "test@example.com",
        "first_name": "John",
        "group_id": 1,
        "last_name": "Doe",
        "password": "Qwerty123!",
        "password_confirmation": "Qwerty123!",
        "roles": [
          "student"
        ]
      },
      "properties": {
        "email": {
          "description": "User email",
          "type": "string"
        },
        "first_name": {
          "description": "User first name",
          "type": "string"
        },
        "group_id": {
          "description": "Id of the user group, if exists",
          "type": "number"
        },
        "last_name": {
          "description": "User last name",
          "type": "string"
        },
        "password": {
          "description": "User password",
          "type": "string"
        },
        "password_confirmation": {
          "description": "User password confirmation",
          "type": "string"
        },
        "roles": {
          "default": [
            "student"
          ],
          "description": "User roles",
          "enum": [
            "admin",
            "teacher",
            "student"
          ],
          "type": "array"
        }
      },
      "required": [
        "roles",
        "password_confirmation",
        "password",
        "email"
      ],
      "title": "New account",
      "type": "object"
    },
    "Accounts": {
      "description": "A collection of Account",
      "items": {
        "$ref": "#/definitions/Account"
      },
      "title": "List of accounts",
      "type": "array"
    },
    "Account": {
      "description": "An user account of the application",
      "example": {
        "email": "test@example.com",
        "first_name": "John",
        "group_id": 1,
        "id": 1,
        "inserted_at": "2024-07-11T05:47:50Z",
        "last_name": "Doe",
        "roles": [
          "student"
        ],
        "updated_at": "2024-07-11T05:47:50Z"
      },
      "properties": {
        "email": {
          "description": "User email",
          "type": "string"
        },
        "first_name": {
          "description": "User first name",
          "type": "string"
        },
        "group_id": {
          "description": "Id od the user group, if exists",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier",
          "type": "number"
        },
        "inserted_at": {
          "description": "Date and time of account creation",
          "type": "datetime"
        },
        "last_name": {
          "description": "User last name",
          "type": "string"
        },
        "roles": {
          "default": [
            "student"
          ],
          "description": "User roles",
          "enum": [
            "admin",
            "teacher",
            "student"
          ],
          "type": "array"
        },
        "updated_at": {
          "description": "Date and time of account last update",
          "type": "datetime"
        }
      },
      "title": "Account",
      "type": "object"
    },
    "NewDefaultAccount": {
      "description": "Data object to create new default admin account",
      "example": {
        "email": "test@example.com",
        "first_name": "John",
        "last_name": "Doe",
        "password": "Qwerty123!",
        "password_confirmation": "Qwerty123!"
      },
      "properties": {
        "email": {
          "description": "Admin email",
          "type": "string"
        },
        "first_name": {
          "description": "Admin first name",
          "type": "string"
        },
        "last_name": {
          "description": "Admin last name",
          "type": "string"
        },
        "password": {
          "description": "Admin password",
          "type": "string"
        },
        "password_confirmation": {
          "description": "Admin password confirmation",
          "type": "string"
        }
      },
      "required": [
        "password_confirmation",
        "password",
        "email"
      ],
      "title": "New default admin account",
      "type": "object"
    },
    "UpdateAccount": {
      "description": "Data object to update new account",
      "example": {
        "first_name": "John",
        "group_id": 1,
        "last_name": "Doe",
        "roles": [
          "student"
        ]
      },
      "properties": {
        "first_name": {
          "description": "User first name",
          "type": "string"
        },
        "group_id": {
          "description": "Id od the user group, if exists",
          "type": "number"
        },
        "last_name": {
          "description": "User last name",
          "type": "string"
        },
        "roles": {
          "default": [
            "student"
          ],
          "description": "User roles",
          "enum": [
            "admin",
            "teacher",
            "student"
          ],
          "type": "array"
        }
      },
      "title": "Update existing account",
      "type": "object"
    }
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Operations with authentication"
    },
    {
      "name": "Accounts",
      "description": "Operations with Accounts"
    },
    {
      "name": "Groups",
      "description": "Operations with Groups"
    },
    {
      "name": "Speciality",
      "description": "Operations with Specialities"
    }
  ],
  "basePath": "/api",
  "securityDefinitions": {
    "bearer": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "description": "Enter the token with the 'Bearer: ' prefix, e.g. 'Bearer abcde12345'"
    }
  },
  "paths": {
    "/accounts": {
      "get": {
        "description": "Query for all accounts. This operation doesn't support pagination yet.",
        "operationId": "BackendWeb.AccountController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Query for accounts",
        "tags": [
          "Accounts"
        ]
      },
      "post": {
        "description": "Create new account.",
        "operationId": "BackendWeb.AccountController.create",
        "parameters": [
          {
            "description": "Data to create account",
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewAccount"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          },
          "400": {
            "description": "Bad request (Unknown error)"
          },
          "422": {
            "description": "Unprocessable entity (something wrong with body)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create new account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/accounts/init": {
      "post": {
        "description": "Create new default admin account. Allowed only when no accounts presents in the database on application first startup",
        "operationId": "BackendWeb.AccountController.init",
        "parameters": [
          {
            "description": "Data to create new default admin account",
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewDefaultAccount"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request (Unknown error)"
          },
          "422": {
            "description": "Unprocessable entity (something wrong with body)"
          }
        },
        "summary": "Create new default admin account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/accounts/{id}": {
      "delete": {
        "description": "Delete account by id.",
        "operationId": "BackendWeb.AccountController.delete",
        "parameters": [
          {
            "description": "Account id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "204": {
            "description": "No content (account deleted)"
          },
          "400": {
            "description": "Bad request (Unknown error)"
          },
          "404": {
            "description": "Not found (account doesn't exists)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete account by id",
        "tags": [
          "Accounts"
        ]
      },
      "get": {
        "description": "Query single account by id.",
        "operationId": "BackendWeb.AccountController.show",
        "parameters": [
          {
            "description": "Account id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "number"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad request (Unknown error)"
          },
          "404": {
            "description": "Not found (account doesn't exists)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Query single account by id",
        "tags": [
          "Accounts"
        ]
      },
      "put": {
        "description": "Update existing account.",
        "operationId": "BackendWeb.AccountController.update",
        "parameters": [
          {
            "description": "Account id",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "number"
          },
          {
            "description": "Data to create account",
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewAccount"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          },
          "400": {
            "description": "Bad request (Unknown error)"
          },
          "404": {
            "description": "Not found (account doesn't exists)"
          },
          "422": {
            "description": "Unprocessable entity (something wrong with body)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update existing account",
        "tags": [
          "Accounts"
        ]
      }
    },
    "/auth/signin": {
      "post": {
        "description": "Singin in the application using email and password",
        "operationId": "BackendWeb.AuthController.sign_in",
        "parameters": [
          {
            "description": "Data to sign in",
            "in": "body",
            "name": "account",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailAndPassport"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TokenResult"
            }
          },
          "400": {
            "description": "Bad request (Unknown error)"
          },
          "401": {
            "description": "Unauthorized (wrong email or password)"
          }
        },
        "summary": "Singin in the application",
        "tags": [
          "Auth"
        ]
      }
    }
  },
  "swagger": "2.0"
}